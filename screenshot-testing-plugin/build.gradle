import org.jetbrains.kotlin.gradle.dsl.KotlinCompile

plugins {
  id("com.starter.library.kotlin")
  id("java-gradle-plugin")
  id("com.starter.publishing")
  id("com.gradle.plugin-publish") version("1.0.0")
}

final GENERATED_PACKAGE_NAME = "io.github.usefulness.testing.screenshot.generated"
final GENERATED_BUILD_DIR = new File(projectDir.absolutePath, "src/generated/kotlin/${GENERATED_PACKAGE_NAME.replace('.', '/')}")

tasks.register("generateBuildConfig") {
  final version = project.version
  doLast {
    GENERATED_BUILD_DIR.deleteDir()
    GENERATED_BUILD_DIR.mkdirs()

    final className = "ScreenshotTestBuildConfig"
    final configClass = new File(GENERATED_BUILD_DIR, "${className}.kt")
    BufferedWriter writer = configClass.newWriter()
    try {
      writer.writeLine("package $GENERATED_PACKAGE_NAME")
      writer.writeLine("")
      writer.writeLine("object $className { const val VERSION = \"${version.toString()}\" }")
      writer.flush()
    } finally {
      writer.close()
    }
  }
}

tasks.withType(KotlinCompile).configureEach {
  kotlinOptions {
    apiVersion = "1.5"
    languageVersion = "1.5"
  }
}

tasks.named("compileKotlin") {
  dependsOn("generateBuildConfig")
  sourceSets {
    main {
      kotlin.srcDirs += 'src/generated/kotlin'
      resources.srcDirs 'src/py'
      resources {
        exclude '**/*.pyc'
        exclude '**/test_*.py'
        exclude '**/fixtures/**'
      }
    }
  }
}

tasks.named('clean') {
  delete GENERATED_BUILD_DIR
}

tasks.register("pyTests", Exec) {
  workingDir file('./src/py')
  commandLine 'python3', '-m', 'unittest', 'discover'
}

pluginBundle {
  website = "https://github.com/usefulness/screenshot-tests-for-android/"
  vcsUrl = "https://github.com/usefulness/screenshot-tests-for-android.git"
  tags = ["android", "screenshots", "espresso", "screenshot-testing"]
}

gradlePlugin {
  plugins {
    screenshotTesting {
      id = 'io.github.usefulness.screenshot-testing-plugin'
      displayName = 'Screenshot Tests for Android'
      description = "Generate fast deterministic screenshots during Android instrumentation tests. Configuration Cache compatibility included"
      implementationClass = 'com.facebook.testing.screenshot.build.ScreenshotsPlugin'
    }
  }
}

dependencies {
  compileOnly(libs.agp.gradle)

  testImplementation(libs.agp.gradle)
  testImplementation(gradleTestKit())
  testImplementation(libs.junit.jupiter)
  testImplementation(libs.assertj.core)
}
