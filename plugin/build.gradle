plugins {
  id("com.starter.library.kotlin")
  id("java-gradle-plugin")
}

final GENERATED_PACKAGE_NAME = "com.facebook.testing.screenshot.generated"
final GENERATED_BUILD_DIR =
    new File(
        projectDir.absolutePath,
        "src/generated/kotlin/${GENERATED_PACKAGE_NAME.replace('.', '/')}")

task generateBuildConfig {
  doLast {
    GENERATED_BUILD_DIR.deleteDir()
    GENERATED_BUILD_DIR.mkdirs()

    final className = "ScreenshotTestBuildConfig"
    final configClass = new File(GENERATED_BUILD_DIR, "${className}.kt")
    BufferedWriter writer = configClass.newWriter()
    try {
      writer.writeLine("package $GENERATED_PACKAGE_NAME")
      writer.writeLine("object $className { val VERSION = \"${project.version.toString()}\" }")
      writer.flush()
    } finally {
      writer.close()
    }
  }
}

dependencies {
  compileOnly libs.agp.gradle

  testImplementation libs.agp.gradle
}

compileKotlin {
  dependsOn generateBuildConfig
  sourceSets {
    main {
      kotlin.srcDirs += 'src/generated'
    }
  }
}

compileJava {
  sourceSets {
    main {
      resources.srcDirs 'src/py'
      resources {
        exclude '**/*.pyc'
        exclude '**/test_*.py'
        exclude '**/fixtures/**'
      }
    }
  }
}

clean {
  delete GENERATED_BUILD_DIR
}

task pyTests(type: Exec) {
  workingDir file('./src/py')
  commandLine 'python3', '-m', 'unittest', 'discover'
}

task py3Tests(type: Exec) {
  workingDir file('./src/py')
  commandLine 'python3', '-m', 'unittest', 'discover'
}
